<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        pST4X9+3ouLs27k7AAAAAElFTkSuQmCC
</value>
  </data>
</root>